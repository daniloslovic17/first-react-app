{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchField.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchField","onSearchChange","onChange","type","placeholder","Scroll","props","style","overflow","height","border","children","ErrorBoundry","state","hasError","error","errorInfo","this","setState","Component","App","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCOCQ,G,MAXF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAW,sDAAhB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,6BAAKC,IACL,4BAAIC,YCaLI,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCFlBC,EANK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnB,OACI,uBAAOC,SAAWD,EAAiBE,KAAK,SAASC,YAAY,SAASZ,UAAU,8CCSzEa,G,MAXA,SAACC,GACZ,OAAQ,qBAAKC,MAAO,CACZC,SAAU,SACVC,OAAQ,OACRC,OAAQ,mBAHR,SAKCJ,EAAMK,aCeJC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,yDAGJG,KAAKX,MAAMK,a,GAjBCQ,aCkDZC,E,kDA5CX,aAAe,IAAD,8BACV,gBAOJnB,eAAiB,SAACoB,GACd,EAAKH,SAAS,CAACI,YAAaD,EAAME,OAAOC,SAPzC,EAAKX,MAAQ,CACTjB,OAAQ,GACR0B,YAAa,IAJP,E,gEAYO,IAAD,OAChBG,MAAM,8CACD3C,MAAK,SAAA4C,GACE,OAAOA,EAASC,UAGvB7C,MAAK,SAAA8C,GACF,EAAKV,SAAS,CAACtB,OAAQgC,S,+BAIzB,IAAD,OACCC,EAAiBZ,KAAKJ,MAAMjB,OAAOkC,QAAO,SAAAC,GAAK,OAAIA,EAAMzC,KAAK0C,cAAcC,SAAS,EAAKpB,MAAMS,YAAYU,kBAClH,OAAKf,KAAKJ,MAAMjB,OAAOsC,OAKf,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAaS,eAAgBgB,KAAKhB,iBAClC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUL,OAAQiC,WAR9B,oBAAIrC,UAAU,KAAd,yB,GA5BE2B,aCAlBgB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5B5D,M","file":"static/js/main.057e57ef.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './Card.css';\n\nconst Card = ({id, name, email}) => {\n    return (\n        <div className={'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'}>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\nexport default Card;","import React from 'react';\nimport Card from \"./Card\";\n\nconst CardList = ({robots}) => {\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card\n                            key={i}\n                            id={robots[i].id}\n                            name={robots[i].name}\n                            email={robots[i].email}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchField = ({ onSearchChange }) => {\n    return (\n        <input onChange={ onSearchChange } type='search' placeholder='Search' className='ba b--green br3 bg-lightest-blue pa2 ma2'/>\n    );\n}\n\nexport default SearchField;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (<div style={{\n            overflow: \"scroll\",\n            height: \"80vh\",\n            border: \"2px solid black\"\n        }}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ hasError: true });\n    }\n\n    render(){\n        if (this.state.hasError){\n            return <h1>Oops. That is not good.</h1>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchField from '../components/SearchField'\nimport './App.css'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value});\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => {\n                    return response.json();\n                }\n            )\n            .then(users => {\n                this.setState({robots: users});\n            })\n    }\n\n    render() {\n        const filteredRobots = this.state.robots.filter(robot => robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase()));\n        if (!this.state.robots.length) {\n            return (\n                <h1 className='f1'>Loading</h1>);\n        } else {\n            return (\n                <div className='tc'>\n                    <h1 className='f1'>Robofriends</h1>\n                    <SearchField onSearchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n        }\n    };\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}